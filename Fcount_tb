library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity Fcount_tb is
end Fcount_tb;


architecture Behavioral of Fcount_tb is

   -- Component declaration for the Unit Under Test (UUT)

  component Fcount is 
	Port ( D1 : in UNSIGNED(3 downto 0);
			clk, reset : in STD_LOGIC;
			f : out UNSIGNED(5 downto 0)
        
		  );

   end component;

   -- Testbench DUT signals

   signal clock_tb : STD_LOGIC := '0';
	signal reset_tb : STD_LOGIC := '0';
   signal D_tb : UNSIGNED(3 downto 0) := (others => '0');
   signal Y_tb : UNSIGNED(5 downto 0);

   -- Clock period definition

   constant clk_period : time := 10 ns;
   constant clk_hz: integer := 50e6; --frequency = 50 Mhz 

begin

   DUT: Fcount
       Port map (
			
           clk => clock_tb,
			  reset => reset_tb,
           D1 => D_tb,
           f => Y_tb
       );

   -- Clock generation

   clock_process :process

   begin

       clock_tb <= '0';
       wait for clk_period/2;
		 
       clock_tb <= '1';
       wait for clk_period/2;
		 
   end process;
	
	reset_process : process
	begin
	
		reset_tb <= '0';
		wait for 50ns;
			 
		reset_tb <= '1';
		wait for 50ns;
		
		
	end process;
	

	
   -- Stimulus process

   stim_proc: process

   begin

       -- Initialize inputs

       D_tb <= "0000";  -- Increment by 1
       wait for 20 ns;
       -- Test different increment values
       D_tb <= "0001";  -- Increment by 2
       wait for 20 ns;
       D_tb <= "0010"; -- Increment by 3
       wait for 20 ns;
       D_tb <= "0011";  -- Increment by 4
		 wait for 20 ns;
       D_tb <= "0100";  
		 wait for 20 ns;
       D_tb <= "0101";  
		 wait for 20 ns;
       D_tb <= "0110";  
		 wait for 20 ns;
       D_tb <= "0111";  
       wait for 20 ns;
       D_tb <= "1000";  
		 wait for 20 ns;
       D_tb <= "1001"; 
       wait for 20 ns;
       D_tb <= "1010"; 
       wait for 20 ns;
       D_tb <= "1011";
		 wait for 20 ns;
       D_tb <= "1100";  
		 wait for 20 ns;
       D_tb <= "1101";  
		 wait for 20 ns;
       D_tb <= "1110";  
		 wait for 20 ns;
       D_tb <= "1111";  
       wait for 20 ns;
       wait;

	end process;
	


end Behavioral;
